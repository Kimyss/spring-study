package com.example.demo.repository;

import java.util.List;
import java.util.stream.IntStream;


import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;  // 얘는 수동으로 import (자동완성이 안돼?)

import com.example.demo.entity.Memo;

@SpringBootTest
public class MemoRepositoryTest1_2 {

	@Autowired
	MemoRepository repository;
	
	@Test
	void 메모데이터100개등록() {
		
//		IntStream :  스트림
//		RangeClosed : 특정 범위의 숫자들로 스트림을 생성하는 함수
//		forEacg : 특정 작업을 수행하는 함수
//		IntStream.rangeClosed(1, 100).forEach((value) -> System.out.println(value));
		
//		위 코드를 활용하여 멤버객체 만들어보기
//		메모 100개를 생성해서 테이블에 추가
		IntStream.rangeClosed(1, 100).forEach(i -> {
			Memo memo = Memo.builder().text("Sample.." + i).build();
			repository.save(memo);
			});
	}
	
	@Test
	void 페이징처리() {
//		페이지 생성
		Pageable pageable = PageRequest.of(1, 10);
		
//		페이지를 정보에 전달하여 목록 조회
		Page<Memo> page = repository.findAll(pageable);
		
//		페이지 객체에서 엔티티 리스트 꺼내기
		List<Memo> list = page.getContent();
		
		System.out.println(list);
		
//		페이지 부가 정보
		System.out.println("총 페이지: " + page.getTotalPages());
		System.out.println("현재 페이지: " + page.getNumber());
		System.out.println("페이지당 데이터 개수: " + page.getSize());
		System.out.println("다음 페이지 존재 여부: " + page.hasNext());
		System.out.println("시작 페이지 여부: " + page.isFirst());
		
		
		
	}
	
	
}
